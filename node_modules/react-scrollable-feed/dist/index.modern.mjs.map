{"version":3,"file":"index.modern.mjs","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CSSProperties } from 'react';\n\nexport type ScrollableFeedProps = {\n    forceScroll?: boolean;\n    animateScroll?: (element: HTMLElement, offset: number) => void;\n    onScrollComplete?: () => void;\n    changeDetectionFilter?: (previousProps: ScrollableFeedComponentProps, newProps: ScrollableFeedComponentProps) => boolean;\n    viewableDetectionEpsilon?: number;\n    className?: string;\n    onScroll?: (isAtBottom: boolean) => void;\n}\n\ntype ScrollableFeedComponentProps = React.PropsWithChildren<ScrollableFeedProps>;\n\nclass ScrollableFeed extends React.Component<React.PropsWithChildren<ScrollableFeedProps>> {\n    private readonly wrapperRef: React.RefObject<HTMLDivElement>;\n    private readonly bottomRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: ScrollableFeedProps) {\n        super(props);\n        this.bottomRef = React.createRef();\n        this.wrapperRef = React.createRef();\n        this.handleScroll = this.handleScroll.bind(this);\n\n        console.log(\"Component cstr\");\n    }\n\n    static defaultProps: ScrollableFeedProps = {\n        forceScroll: false,\n        animateScroll: (element: HTMLElement, offset: number): void => {\n            if (element.scrollBy) {\n                element.scrollBy({ top: offset });\n            }\n            else {\n                element.scrollTop = offset;\n            }\n        },\n        onScrollComplete: () => {},\n        changeDetectionFilter: () => true,\n        viewableDetectionEpsilon: 2,\n        onScroll: () => {},\n    };\n\n    getSnapshotBeforeUpdate(): boolean {\n      console.log(\"Component \", this.getSnapshotBeforeUpdate.name);\n        if (this.wrapperRef.current && this.bottomRef.current) {\n            const { viewableDetectionEpsilon } = this.props;\n            return ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!); //This argument is passed down to componentDidUpdate as 3rd parameter\n        }\n        return false;\n    }\n\n    componentDidUpdate(previousProps: ScrollableFeedComponentProps, _previousState: any, snapshot: boolean): void {\n      console.log(\"Component \", this.componentDidUpdate.name);\n        const { forceScroll, changeDetectionFilter } = this.props;\n        const isValidChange = changeDetectionFilter!(previousProps, this.props);\n        if (isValidChange && (forceScroll || snapshot) && this.bottomRef.current && this.wrapperRef.current) {\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n        }\n    }\n\n    componentDidMount(): void {\n      console.log(\"Component \", this.componentDidMount.name);\n        //Scroll to bottom from the start\n        if (this.bottomRef.current && this.wrapperRef.current) {\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n        }\n    }\n\n    /**\n     * Scrolls a parent element such that the child element will be in view\n     * @param parent\n     * @param child\n     */\n    protected scrollParentToChild(parent: HTMLElement, child: HTMLElement): void {\n        const { viewableDetectionEpsilon } = this.props;\n        if (!ScrollableFeed.isViewable(parent, child, viewableDetectionEpsilon!)) {\n            //Source: https://stackoverflow.com/a/45411081/6316091\n            const parentRect = parent.getBoundingClientRect();\n            const childRect = child.getBoundingClientRect();\n\n            //Scroll by offset relative to parent\n            const scrollOffset = (childRect.top + parent.scrollTop) - parentRect.top;\n            const { animateScroll, onScrollComplete } = this.props;\n            if (animateScroll) {\n                animateScroll(parent, scrollOffset);\n                onScrollComplete!();\n            }\n        }\n    }\n\n    /**\n     * Returns whether a child element is visible within a parent element\n     *\n     * @param parent\n     * @param child\n     * @param epsilon\n     */\n    private static isViewable(parent: HTMLElement, child: HTMLElement, epsilon: number): boolean {\n        epsilon = epsilon || 0;\n\n        //Source: https://stackoverflow.com/a/45411081/6316091\n        const parentRect = parent.getBoundingClientRect();\n        const childRect = child.getBoundingClientRect();\n\n        const childTopIsViewable = (childRect.top >= parentRect.top);\n\n        const childOffsetToParentBottom = parentRect.top + parent.clientHeight - childRect.top;\n        const childBottomIsViewable = childOffsetToParentBottom + epsilon >= 0;\n\n        return childTopIsViewable && childBottomIsViewable;\n    }\n\n    /**\n     * Fires the onScroll event, sending isAtBottom boolean as its first parameter\n     */\n    protected handleScroll(): void {\n        const { viewableDetectionEpsilon, onScroll } = this.props;\n        if (onScroll && this.bottomRef.current && this.wrapperRef.current) {\n            const isAtBottom = ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!);\n            onScroll(isAtBottom);\n        }\n    }\n\n    /**\n     * Scroll to the bottom\n     */\n    public scrollToBottom(): void {\n        if (this.bottomRef.current && this.wrapperRef.current) {\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n        }\n    }\n\n    render(): React.ReactNode {\n      console.log(\"Component \", this.render.name);\n\n        const style: CSSProperties = {\n            maxHeight: \"inherit\",\n            height: \"inherit\",\n            overflowY: \"auto\",\n        };\n        const { children, className } = this.props;\n        return (\n            <div className={className} style={style} ref={this.wrapperRef} onScroll={this.handleScroll}>\n                {children}\n                <div ref={this.bottomRef}></div>\n            </div>\n        );\n    }\n}\n\nexport default ScrollableFeed;\n"],"names":["ScrollableFeed","React","Component","constructor","props","super","this","wrapperRef","bottomRef","createRef","handleScroll","bind","console","log","getSnapshotBeforeUpdate","name","current","viewableDetectionEpsilon","isViewable","componentDidUpdate","previousProps","_previousState","snapshot","forceScroll","changeDetectionFilter","scrollParentToChild","componentDidMount","parent","child","parentRect","getBoundingClientRect","scrollOffset","top","scrollTop","animateScroll","onScrollComplete","epsilon","childRect","clientHeight","onScroll","scrollToBottom","render","children","className","style","maxHeight","height","overflowY","ref","createElement","defaultProps","element","offset","scrollBy"],"mappings":"wBAeA,MAAMA,UAAuBC,EAAMC,UAI/BC,WAAAA,CAAYC,GACRC,MAAMD,GAAOE,KAJAC,gBAAU,EAAAD,KACVE,eAIb,EAAAF,KAAKE,uBAAYP,EAAMQ,YACvBH,KAAKC,wBAAaN,EAAMQ,YACxBH,KAAKI,aAAeJ,KAAKI,aAAaC,KAAKL,MAE3CM,QAAQC,IAAI,iBAChB,CAkBAC,uBAAAA,GAEI,GADFF,QAAQC,IAAI,aAAcP,KAAKQ,wBAAwBC,MACjDT,KAAKC,WAAWS,SAAWV,KAAKE,UAAUQ,QAAS,CACnD,MAAMC,yBAAEA,GAA6BX,KAAKF,MAC1C,OAAOJ,EAAekB,WAAWZ,KAAKC,WAAWS,QAASV,KAAKE,UAAUQ,QAASC,EACrF,CACD,QACJ,CAEAE,kBAAAA,CAAmBC,EAA6CC,EAAqBC,GACnFV,QAAQC,IAAI,aAAcP,KAAKa,mBAAmBJ,MAChD,MAAMQ,YAAEA,EAAWC,sBAAEA,GAA0BlB,KAAKF,MAC9BoB,EAAuBJ,EAAed,KAAKF,SAC3CmB,GAAeD,IAAahB,KAAKE,UAAUQ,SAAWV,KAAKC,WAAWS,SACxFV,KAAKmB,oBAAoBnB,KAAKC,WAAWS,QAASV,KAAKE,UAAUQ,QAEzE,CAEAU,iBAAAA,GACEd,QAAQC,IAAI,aAAcP,KAAKoB,kBAAkBX,MAE3CT,KAAKE,UAAUQ,SAAWV,KAAKC,WAAWS,SAC1CV,KAAKmB,oBAAoBnB,KAAKC,WAAWS,QAASV,KAAKE,UAAUQ,QAEzE,CAOUS,mBAAAA,CAAoBE,EAAqBC,GAC/C,MAAMX,yBAAEA,GAA6BX,KAAKF,MAC1C,IAAKJ,EAAekB,WAAWS,EAAQC,EAAOX,GAA4B,CAEtE,MAAMY,EAAaF,EAAOG,wBAIpBC,EAHYH,EAAME,wBAGQE,IAAML,EAAOM,UAAaJ,EAAWG,KAC/DE,cAAEA,EAAaC,iBAAEA,GAAqB7B,KAAKF,MAC7C8B,IACAA,EAAcP,EAAQI,GACtBI,IAEP,CACL,CASQ,iBAAOjB,CAAWS,EAAqBC,EAAoBQ,GAC/DA,EAAUA,GAAW,EAGrB,MAAMP,EAAaF,EAAOG,wBACpBO,EAAYT,EAAME,wBAOxB,OAL4BO,EAAUL,KAAOH,EAAWG,KAEtBH,EAAWG,IAAML,EAAOW,aAAeD,EAAUL,IACzBI,GAAW,CAGzE,CAKU1B,YAAAA,GACN,MAAMO,yBAAEA,EAAwBsB,SAAEA,GAAajC,KAAKF,MAChDmC,GAAYjC,KAAKE,UAAUQ,SAAWV,KAAKC,WAAWS,SAEtDuB,EADmBvC,EAAekB,WAAWZ,KAAKC,WAAWS,QAASV,KAAKE,UAAUQ,QAASC,GAGtG,CAKOuB,cAAAA,GACClC,KAAKE,UAAUQ,SAAWV,KAAKC,WAAWS,SAC1CV,KAAKmB,oBAAoBnB,KAAKC,WAAWS,QAASV,KAAKE,UAAUQ,QAEzE,CAEAyB,MAAAA,GACE7B,QAAQC,IAAI,aAAcP,KAAKmC,OAAO1B,MAEpC,MAKM2B,SAAEA,EAAQC,UAAEA,GAAcrC,KAAKF,mBACrC,OACIH,uBAAK0C,UAAWA,EAAWC,MAPF,CACzBC,UAAW,UACXC,OAAQ,UACRC,UAAW,QAI8BC,IAAK1C,KAAKC,WAAYgC,SAAUjC,KAAKI,cACzEgC,eACDzC,EAAKgD,cAAA,MAAA,CAAAD,IAAK1C,KAAKE,YAG3B,EAtIER,EAaKkD,aAAoC,CACvC3B,aAAa,EACbW,cAAeA,CAACiB,EAAsBC,KAC9BD,EAAQE,SACRF,EAAQE,SAAS,CAAErB,IAAKoB,IAGxBD,EAAQlB,UAAYmB,CACvB,EAELjB,iBAAkBA,OAClBX,sBAAuBA,KAAM,EAC7BP,yBAA0B,EAC1BsB,SAAUA"}